[tool.poetry]
name = "secret-santa"
version = "0.1.0"
description = "A Secret Santa game which randomly assigns and notifies people to whom they should give a gift using Twilio's messaging API"
license = "Unlicense"
authors = ["Fawzi Abo Shkara <fawzi.aboshkara@gmail.com>"]
readme = "README.md"
homepage = "https://github.com/FawziAS/secret-santa"
repository = "https://github.com/FawziAS/secret-santa.git"

[tool.poetry.dependencies]
python = "^3.10"
python-dotenv = "^0.21.0"
twilio = "^7.15.4"
pyfiglet = "^0.8.post1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"
black = "^22.1.0"
isort = "^5.10.1"
taskipy = "^1.10.1"
pytest-lazy-fixture = "^0.6.3"
pytest-mock = "^3.7.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black] # The black formatter config
line-length = 100

[tool.isort] # isort config
profile = "black"
line_length = 100
src_paths = ["secret_santa", "tests"]
skip_gitignore = true

[tool.taskipy.variables]
all_paths = "secret_santa/ tests/"
sources_only = "secret_santa/"
tests_only = "tests/"

[tool.taskipy.tasks]
test = { cmd = "pytest -v {tests_only}", use_vars = true, help = "run all tests." }
isort = { cmd = "isort {all_paths}", use_vars = true, help = "run isort on sources and tests." }
black = { cmd = "black {all_paths}", use_vars = true, help = "run black on sources and tests." }
format = { cmd = "task isort && task black", help = "reformat code" }

isort_check = { cmd = "task isort --check-only", help = "run task isort in check mode (no writing back)." }
black_check = { cmd = "task black --check", help = "run task black in check mode (no writing back)." }
lint = { cmd = "task isort_check && task black_check", help = "check code formatting." }
